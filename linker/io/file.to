use std
use fmt
use os 

#func fwrite(buffer<i8*> , size<u64> , count<u64> , fd<u64*>){
func fwrite(fd,buffer<u64>,size<u64>){
	s<i8> = 1
	ret<u64> = std.fwrite(buffer,size,s,*fd)
	if ret != size {
		fmt.print("fwrite err\n")
		return false
	}
	return true
}

#func fopen(filename,mode)
func fopen(filename,mode){
	if filename == "" {
		fmt.print("fopen filename is empty\n")
		return false
	}
	ret<i8> = std.fopen(*filename,*mode)
	if ret == null {
		fmt.print("fopen failed\n")
		return false
	}
	return int(ret)
}
//func fclose(fp<u64>)
func fclose(fp){
	return std.fclose(*fp)
}


//func seek(fd<i64> , offset<i64> , mode<i64>)
func rewind(fd){
	st<i8> = 0
	std.seek(*fd,st,std.SEEK_SET)	
}

//func read(fd<i64> , buffer<u64*> , size<u64>
func fread(fd,size<i64>){
	buffer<u64*> = new size
	if std.read(*fd,buffer,size) != size {
		//fmt.println("fread err")
		os.die("fread err")
		return false
	}
	return buffer
}

//func fseek(fp<u64>,offset<i64> , set<i64>)
func fseek(fp,offset<i64>){
	std.fseek(*fp,offset,std.SEEK_SET)
	return true
}