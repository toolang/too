
use fmt
use link
use os 
use std

func print_help(){
    fmt.println("usage: ./cld [options|file.o...]\n" +
                "  -p       指定扫描目录下所有.0文件进行链接生成可执行程序\n" +
                "  file.o   ... 手动指定多个file.o进行链接\n"
    )
}

func link(){
    linker  = new link.Linker()
    outfile = "a.out"
    for(obj : os.argv){
        # 添加目标文件
        linker.addElf(obj)
    }
    # 开始链接
    linker.link(outfile)
}

func scan(){
    linker  = new link.Linker()

    outfile = "a.out" 
    # 扫描所有路径
    for(dir : os.argv){
        if !std.is_dir(dir) os.die(dir + " not exist")
        # 迭代目录文件
        fd = std.opendir(dir)
        while true {
            file = std.readdir(fd)
            if !file || !file.isFile() break
            # 解析目标文件
            linker.addElf(file.path)
        }
    }
    # 开始链接
    linker.link(outfile)
}


func main() {
    if  os.argc < 2 {
        return print_help()
    }
    //scan
    if os.argv[1] != "-p" {
        return scan()
    }
    return link()

}
